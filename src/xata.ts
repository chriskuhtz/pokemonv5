// Generated by Xata Codegen 0.29.0. Please do not edit.
import type {
	BaseClientOptions,
	SchemaInference,
	XataRecord,
} from '@xata.io/client';
import { buildClient } from '@xata.io/client';

const tables = [
	{
		name: 'accounts',
		columns: [
			{ name: 'password', type: 'string' },
			{ name: 'sprite', type: 'string' },
			{ name: 'username', type: 'string', unique: true },
		],
	},
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Accounts = InferredTypes['accounts'];
export type AccountsRecord = Accounts & XataRecord;

export type DatabaseSchema = {
	accounts: AccountsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
	databaseURL:
		'https://chriskuhtz-s-workspace-lu92eq.eu-central-1.xata.sh/db/pokemonv5',
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super(
			{
				...defaultOptions,
				...options,
				enableBrowser: true,
				apiKey: import.meta.env.VITE_XATA_API_KEY,
			},
			tables
		);
	}
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
	if (instance) return instance;

	instance = new XataClient();
	return instance;
};
